<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
  xmlns:p="http://www.springframework.org/schema/p"  
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
  xmlns:context="http://www.springframework.org/schema/context"  
  xmlns:mvc="http://www.springframework.org/schema/mvc"  
  xsi:schemaLocation="  
    http://www.springframework.org/schema/beans  
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
    http://www.springframework.org/schema/context  
    http://www.springframework.org/schema/context/spring-context-3.0.xsd  
    http://www.springframework.org/schema/mvc  
    http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">  
       
    <!-- 扫描controller（controller层注入）下面的或者子包下面的class，扫描如果有
@Component,@Controller,@Respotory,@Service这些注解的类，然后注册为java bean容器中的bean -->  
   <context:component-scan base-package="com.xzg.controller"/>    
   
       <!--避免IE执行AJAX时，返回JSON出现下载文件2016.12.3 -->  
    <bean id="mappingJacksonHttpMessageConverter"  
        class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">  
        <property name="supportedMediaTypes">  
            <list>  
                <value>text/html;charset=UTF-8</value>  
            </list>  
        </property>  
    </bean> 
    <!-- if you use annotation you must configure following setting ,开启RequestMapper注解-->
    <mvc:annotation-driven />
   <!-- 对模型视图添加前后缀 -->  
     <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver"  
      p:prefix="/WEB-INF/" 
      p:suffix=".jsp"/>
      
      <!-- 利用SpringMVC配置缺省请求处理器处理静态资源   无法完成
      <mvc:default-servlet-handler/> -->
       <!-- 利用SpringMVC资源映射来映射在目录下的静态资源     -->
           <mvc:resources mapping="/js/**" location="/js/" />
  <!--      扫描路径
    <context:component-scan base-package="com.test.controller" >
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan> -->

    <!-- 激活基于注解的配置 @RequestMapping, @ExceptionHandler,数据绑定 ,@NumberFormat ,
    @DateTimeFormat ,@Controller ,@Valid ,@RequestBody ,@ResponseBody等  -->
    <!-- 静态资源配置 <mvc:resources location="/assets/" mapping="/assets/**"></mvc:resources> -->
    <!-- 配置根视图  <mvc:view-controller path="/" view-name="index"/> -->
     <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包  
    <bean id="multipartResolver"    
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">    
        默认编码  
        <property name="defaultEncoding" value="utf-8" />    
        文件大小最大值  
        <property name="maxUploadSize" value="10485760000" />    
        内存中的最大值  
        <property name="maxInMemorySize" value="40960" />    
    </bean>  --> 
    <!-- 2017-01-09新增 -->
    <context:component-scan base-package="org.activiti.web.simple.webapp.controller">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	<!-- ResourceBundleViewResolver通过读X.properties文件，进行视图解析,这个文件位于classpath路径下，
	X的值是通过设置ResourceBundleViewResolver的basename属性来设定的-->
     <bean class="org.springframework.web.servlet.view.ResourceBundleViewResolver">
		<property name="basename" value="views"></property>
	</bean>
	<!-- 明确指明某一个请求过来用那个controller来处理 -->
	<bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
		<property name="alwaysUseFullPath" value="true"></property>
		<property name="mappings">
			<props>
				<prop key="/simpleurl">SimpleUrlController</prop>
			</props>
		</property>
	</bean>
	<!-- velocity视图解析 不知？ -->
<bean id="velocityConfig" class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
		<property name="resourceLoaderPath" value="/WEB-INF/velocity/" />
		<property name="configLocation" value="/WEB-INF/velocity.properties"/>
	</bean> 
	<bean id="velocityViewResolver" class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
		<property name="cache" value="true" />
		<property name="prefix" value="" />
		<property name="suffix" value=".vm" />
		<property name="exposeSpringMacroHelpers" value="true" />
	</bean> 
	<!-- freeMarker视图解析 不了解-->
	<bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath" value="/WEB-INF/freemarker/" />
	</bean>
	<bean id="freeMarkerViewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="cache" value="true" />
		<property name="prefix" value="" />
		<property name="suffix" value=".ftl" />
		<property name="exposeSpringMacroHelpers" value="true" />
	</bean>
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<!-- JSON解析对象 -->
				<bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" />
				<bean class="org.springframework.http.converter.StringHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>text/plain;charset=UTF-8</value>
						</list>
					</property>
				</bean>
			</list>
		</property>
	</bean>
	<!-- 支持文件上传 id="multipartResolver"不能省-->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="1000000"></property>
	</bean>
	<!-- 按bean的名字去解析  查看rssViewer视图 -->
	<bean class="org.springframework.web.servlet.view.BeanNameViewResolver" />
	<!-- 设置默认的页面  请求转发到login.jsp -->
	<mvc:view-controller path="/" view-name="login"/>
	<!-- 放行静态资源 ：许静态资源放在任何地方，如WEB-INF目录下，location属性指定静态资源的位置-->
	<mvc:resources location="/images/" mapping="/images/**"/>
	<mvc:resources location="/js/" mapping="/js/**"/>
	<mvc:resources location="/style/" mapping="/style/**"/>
	<mvc:resources location="/upload/" mapping="/upload/**"/>
	<mvc:resources location="/common/" mapping="/common/**"/>
	<mvc:resources location="/My97DatePicker/" mapping="/My97DatePicker/**"/>
</beans> 